% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hdf5.R
\docType{package}
\name{HDF5 Utilities}
\alias{HDF5 Utilities}
\alias{HDF5 Utilities-package}
\title{HDF5 input/output utilities.}
\description{
Functions for HDF5 input and output. These should only be
used internally. External HDF5 input/output should be done through an
exported package function (e.g. \code{\link{run_scanone}}).
}
\details{
HDF5 files are assumed to have one or more of the following root 
groups.

\subsection{Maps}{ This group contains genetic or physical maps, which can 
be read with \code{\link{readMapHDF5}}, or written with 
\code{\link{writeMapHDF5}}.
}
  
\subsection{Results}{ Each subgroup contains results for a single phenotype
(or equivalent analysis unit). Phenotype names must be unique within each
file. Results can be read with \code{\link{readResultHDF5}}, or written with
\code{\link{writeResultHDF5}}.

This group can also contain a results overview dataset ('/Results/Overview'),
which summarises the results for all phenotypes. A results overview can be
read with \code{\link{readOverviewHDF5}}), or written with
\code{\link{writeOverviewHDF5}}.
}

If needed, datasets with a specified name can be read or written using the
functions \code{\link{readDatasetHDF5}} or \code{\link{writeDatasetHDF5}},
respectively. When reading or writing a matrix or array object, the object
is transposed (with R function \code{t}) or permuted (with R function
\code{aperm}), respectively. This is because HDF5 uses row-major order
(like the C language) while R uses column-major order (like Fortran).
For more information, see the
\href{https://www.hdfgroup.org/HDF5/doc/}{HDF5 documentation}. 

Note that attribute order is not preserved when reading/writing HDF5 objects,
and that datasets within a file cannot currently be overwritten.
}
\keyword{internal}

